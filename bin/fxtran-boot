#!/usr/bin/env perl 

=head1 NAME

fxtran-boot

=head1 SYNOPSIS

  $ fxtran-boot \
     --prefix <path-to-fxtran-acdc-installation> \
     --F90 "FORTRAN compiler & options" \
     --CC "C compiler & options" \
     --CXX "C++ compiler & options"

or (ecbuild/cmake environment):

  $ fxtran-boot \
     --prefix <path-to-fxtran-acdc-installation> \
     --ecbuild-build-type BIT

=head1 DESCRIPTION

C<fxtran-boot> compiles and install the fxtran-acdc libraries. Compilers and
their options may be passed directly as options, or inferred from the C<ecbuild>
environment.

=head1 OPTIONS

=over 4

=item --prefix

Directory where fxtran-acdc libraries and headers should be installed.

=item --F90

FORTRAN compiler and options.

=item --CC

C compiler and options.

=item --CXX

C++ compiler and options.

=item --ecbuild-build-type

C<ecbuild> build type (similar to cmake build type).

=back

=head1 SEE ALSO

L<fxtran-f90>, L<ecbuild|https://github.com/ecmwf/ecbuild>, L<Fxtran::F90Compiler>

=head1 AUTHOR

philippe.marguinaud@meteo.fr

=head1 COPYRIGHT

Meteo-France 2025

=cut

use warnings;

use Getopt::Long;
use FileHandle;
use Data::Dumper;
use File::Temp;
use File::Basename;
use File::Spec;
use File::Copy;
use File::Path;
use Cwd;

use FindBin qw ($Bin);
use lib "$Bin/../lib";

use strict;

use Fxtran::Common;
use Fxtran::Bt;
use Fxtran::F90Compiler;
use Fxtran::Util;
use Fxtran::PATH;

sub slurp
{
  my $f = shift;
# die ("File `$f' was not found") unless (-f $f);
  local $/ = undef; 
  my $fh = 'FileHandle'->new ("<$f"); 
  return '' unless ($fh);
  my $data = <$fh>;
  return $data;
}

my %opts = qw (prefix .);
my @opts_s = qw (prefix F90 CC CXX ecbuild-build-type);
my @opts_f = qw (help);

&GetOptions
(
  (map { ($_, \$opts{$_}) } @opts_f),
  (map { ("$_=s", \$opts{$_}) } @opts_s),
);

if ($opts{help})
  {
    print
     "Usage: " . &basename ($0) . "\n" .
      join ('', map { "  --$_\n" } @opts_f) .
      join ('', map { "  --$_=...\n" } @opts_f) .
     "\n";
    exit (0);
  }

my ($f90compiler, @f90flags);
my ($ccompiler  , @cflags  );
my ($cxxcompiler, @cxxflags);

if ($opts{'ecbuild-build-type'})
  {
    @opts{qw (F90 CC CXX)} = @ENV{qw (F90 CC CXX)};

    my $toolchain = $ENV{ECBUILD_TOOLCHAIN} || './toolchain.cmake';
    die ("Cannot find ecbuild toolchain") unless (-f $toolchain);

    $toolchain = 'File::Spec'->rel2abs ($toolchain);
    
    my $cwd = &cwd ();

    my $dir = 'File::Temp'->newdir ();

    chdir ($dir);

    'FileHandle'->new ('>CMakeLists.txt')->print (<< "EOF");
cmake_minimum_required (VERSION 3.28)

project (fxtran-boot)

include ($toolchain)

get_cmake_property (vars VARIABLES)

make_directory ("variables")

foreach (var \${vars})
  file (WRITE "variables/\${var}" "\${\${var}}")
endforeach ()

EOF

    system ('cmake', '.') and die ("cmake configuration failed");

    my %flags;

    for my $lang (qw (CXX C Fortran))
      {
        $flags{$lang} = [];
        for my $prefix (qw (OpenMP OpenACC ECBUILD))
          {
            push @{ $flags{$lang} }, split (m/\s+/o, &slurp ("variables/${prefix}_${lang}_FLAGS"));
          }
        push @{ $flags{$lang} },  split (m/\s+/o, &slurp ("variables/ECBUILD_${lang}_FLAGS_$opts{'ecbuild-build-type'}"));
      }

    chdir ($cwd);

    ($f90compiler, @f90flags) = ($opts{F90}, @{ $flags{Fortran} });
    ($ccompiler,   @cflags  ) = ($opts{CC},  @{ $flags{C}       });
    ($cxxcompiler, @cxxflags) = ($opts{CXX}, @{ $flags{CXX}     });

  }
else
  {

    for my $comp (qw (F90 CC CXX))
      {
        next unless ($opts{$comp});
        $opts{$comp} = [split (m/\s+/o, $opts{$comp})];
      }

    ($f90compiler, @f90flags) = $opts{F90} ? @{ $opts{F90} } : @ARGV;
    ($ccompiler  , @cflags  ) = @{ $opts{CC} || [] };
    ($cxxcompiler, @cxxflags) = @{ $opts{CXX} || [] };

  }

$opts{prefix} = 'File::Spec'->rel2abs ($opts{prefix});

@f90flags = grep { $_ ne '-c' } @f90flags;
@cflags   = grep { $_ ne '-c' } @cflags;
@cxxflags = grep { $_ ne '-c' } @cxxflags;

my @F90 = <$Bin/../src/*.F90>;
my @C   = <$Bin/../src/*.c>;
my @CXX = <$Bin/../src/*.cc>;

my $dir = 'File::Temp'->newdir ();

chdir ($dir);

&Fxtran::F90Compiler::run 
(
  f90compiler => $f90compiler, 
  f90flags    => \@f90flags, 
  F90         => \@F90,

  ccompiler   => $ccompiler,
  cflags      => \@cflags,
  C           => \@C,

  cxxcompiler => $cxxcompiler,
  cxxflags    => \@cxxflags,
  CXX         => \@CXX,

  lib         => "libACDC.a",
);

for (qw (include lib))
  {
    &mkpath ("$opts{prefix}/$_") 
      unless (-d "$opts{prefix}/$_");
  }

&move ('libACDC.a', "$opts{prefix}/lib/libACDC.a")
  or die ("Cannot install libACDC.a");

for (<*.mod>, <*.smod>, <$Bin/../src/*.h>)
  {
    &copy ($_, "$opts{prefix}/include/" . &basename ($_))
      or die ("Cannot install $_");
  }


